#!/bin/bash

CLUSTER_IP={{ vip_cidr|ipaddr('address') }}

{% if network | lower == 'flannel' or network | lower == 'canal' %}
pod_subnet=10.244.0.0/16
{% elif network | lower == 'calico' %}
pod_subnet=192.168.0.0/16
{% else %}
pod_subnet=10.244.0.0/16
{% endif %}

current_ip={{ansible_default_ipv4.address}}

{% if init_ip == ansible_default_ipv4.address %}
INITIAL_CLUSTER=$(
	echo "${host_dict[${current_ip}]}=https://${current_ip}:2380"
)
{% else %}

arr=({{host_and_ips}})

initial_cluster_status="initial-cluster-status: existing"
INITIAL_CLUSTER=$(
	for ((i=0; i<{{ansible_play_batch}}; i++));do
		echo "${arr[$((i+1))]}=https://${arr[$i]}:2380"
	done | xargs | tr ' ' ,
  )
{% endif %}

clusterfilename=/tmp/kubeadm-config-{{ansible_hostname}}.yaml

cat > ${clusterfilename} <<EOT
apiVersion: kubeadm.k8s.io/v1alpha3
kind: ClusterConfiguration
kubernetesVersion: {{version | default('stable')}}
apiServerCertSANs:
- "${CLUSTER_IP}"
controlPlaneEndpoint: "${CLUSTER_IP}:6443"
etcd:
  local:
    extraArgs:
      name: "{{ansible_hostname}}"
      listen-client-urls: "https://127.0.0.1:2379,https://${current_ip}:2379"
      advertise-client-urls: "https://${current_ip}:2379"
      listen-peer-urls: "https://${current_ip}:2380"
      initial-advertise-peer-urls: "https://${current_ip}:2380"
      initial-cluster: "${INITIAL_CLUSTER}"
      ${initial_cluster_status}
serverCertSANs:
  - {{ansible_hostname}}
  - ${current_ip}
peerCertSANs:
  - {{ansible_hostname}}
  - ${current_ip}
networking:
  podSubnet: "${pod_subnet}"
EOT


{% if init_ip == ansible_default_ipv4.address %}
sed -i '/^[[:space:]]*$/d' ${clusterfilename}
{% else %}
initfilename=/tmp/kubeadm-config-{{ansible_hostname}}-init.yaml
cat > ${initfilename} <<EOT
apiVersion: kubeadm.k8s.io/v1alpha3
kind: InitConfiguration
kubernetesVersion: {{version | default('stable')}}
apiServerCertSANs:
- "${CLUSTER_IP}"
controlPlaneEndpoint: "${CLUSTER_IP}:6443"
etcd:
  local:
    extraArgs:
      name: "{{ansible_hostname}}"
      listen-client-urls: "https://127.0.0.1:2379,https://${current_ip}:2379"
      advertise-client-urls: "https://${current_ip}:2379"
      listen-peer-urls: "https://${current_ip}:2380"
      initial-advertise-peer-urls: "https://${current_ip}:2380"
      initial-cluster: "${INITIAL_CLUSTER}"
      ${initial_cluster_status}
serverCertSANs:
  - {{ansible_hostname}}
  - ${current_ip}
peerCertSANs:
  - {{ansible_hostname}}
  - ${current_ip}
networking:
  podSubnet: "${pod_subnet}"
EOT
{% endif %}
