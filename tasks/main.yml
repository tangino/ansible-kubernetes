# tasks file for kubernetes
#
#
#
- name: 检查是否已经传入必须的变量
  fail:
    msg: "以下变量必须定义: vip_interface vip_cidr"
  when: vip_interface is not defined or vip_cidr is not defined
  tags:
    - check-var

- name: 定义变量
  set_fact:
    init: "{{ init | default(ansible_play_batch[0]) }}"
    network: "{{ network | default('Flannel')}}"
    version: "{{ version | default('1.12.0') }}"
  tags:
    - set-vars
    - debug-var

- name: 解析主机名和ip地址
  raw: |
    host_ips=$(ansible {{ansible_play_batch|join(',')}} -m setup | grep -A 1 -w -E "ansible_hostname|ansible_default_ipv4" | egrep "ansible_hostname|address" | awk '{FS=":"; print $2}' | xargs | tr , " ")
    echo ${host_ips}
  args:
    executable: /bin/bash
  connection: local
  run_once: yes
  register: host_ips
  tags:
    - get-hosts
    - debug-var

- name: 设置自定义fact
  set_fact:
    host_and_ips: "{{host_ips.stdout_lines[0]}}"
  tags:
    - set-hosts
    - debug-var

- debug: msg=init={{init}}
  tags:
    - debug-var

- name: 计算执行kubeadm init的主机名或IP
  raw: |
    arr=({{host_and_ips}})
    if echo {{host_and_ips}} | grep -i {{init}} >/dev/null;then
      for i in ${!arr[@]};do
        if [ {{init}} = ${arr[$i]} ] && [ $(($i%2)) = 0 ]; then 
          init_ip=${arr[$i]}
          init_hostname=${arr[$(($i+1))]}
          init_host=(${init_ip} ${init_hostname})
          break
        elif [ {{init}} = ${arr[$i]} ] && [ $(($i%2)) != 0 ]; then
          init_ip=${arr[$(($i-1))]}
          init_hostname=${arr[$i]}
          init_host=(${init_ip} ${init_hostname})
          break
        fi
      done
      echo ${init_host[@]}
    else
      >&2 echo "init：ip或主机名不是有效的值"
      exit 1
    fi
  args:
    executable: /bin/bash
  run_once: yes
  register: init_host
  tags:
    - calc
    - debug-var

- debug: msg=init_host={{init_host}}
  tags:
    - debug-var

- name: 记录init主机名和IP到fact
  set_fact:
    init_ip: "{{init_host.stdout_lines[0].split(' ')[0]}}"
    init_hostname: "{{init_host.stdout_lines[0].split(' ')[1]}}"
  tags:
    - rec-init
    - debug-var

- debug: msg="ip={{init_ip}} hostname={{init_hostname}}"
  tags:
    - debug-var
    
- name: 配置系统
  import_tasks: configurate-system.yml

- name: 安装Docker-ce (CentOS)
  import_tasks: install-centos-docker.yml
  when: ansible_pkg_mgr == 'yum'

- name: 安装kubeadm kubectl kubelet (CentOS)
  import_tasks: install-centos-k8s-tools.yml
  when: ansible_pkg_mgr == 'yum'

- name: 安装Docker-ce (Ubuntu)
  import_tasks: install-ubuntu-docker.yml
  when: ansible_pkg_mgr == "apt"

- name: 安装kubeadm kubectl kubelet (Ubuntu)
  import_tasks: install-ubuntu-k8s-tools.yml
  when: ansible_pkg_mgr == "apt"

- name: 拉取相关Docker镜像
  import_tasks: pull-k8s-images.yml

- name: 安装keepalived
  import_tasks: install-keepalived.yml

- name: 执行kubeadm init命令
  import_tasks: kubeadm-init.yml

  #- name: 添加master节点
  #  import_tasks: copy-certs.yml
  #
  #- name: 配置kubelet
  #  import_tasks: config-kubelet.yml
  #
  #- name: 配置etcd
  #  import_tasks: config-etcd.yml
  #
  #- name: 添加node节点
  #  import_tasks: kubeadm-join.yml
