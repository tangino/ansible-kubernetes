- name: 准备kubeadm配置脚本
  template:
    src: generate_kubeadm_config.sh.j2
    dest: /tmp/generate_kubeadm_config.sh
  tags:
    - prepare-config
    - kubeadm-init

- name: 创建kubeadm集群配置文件
  shell: /bin/bash /tmp/generate_kubeadm_config.sh
  tags:
    - create-config
    - kubeadm-init

- name: 执行kubeadm init命令
  shell: kubeadm init --config /tmp/kubeadm-config-{{ansible_hostname}}.yaml --ignore-preflight-errors=all
  run_once: yes
  delegate_to: "{{master1}}"
  register: result
  tags:
    - kubeadm-init

- name: 创建kubeadm管理用户(没有密码)
  user:
    name: kubernetes
    state: present
  run_once: yes
  delegate_to: "{{master1}}"
  when: result.rc == 0
  tags:
    - kubeadm-init

- name: 创建kubeadm context配置文件夹
  shell: |
    mkdir -p /home/kubernetes/.kube/ && chown kubernetes:kubernetes /home/kubernetes/ -R
  args:
    warn: no
  run_once: yes
  delegate_to: "{{master1}}"
  register: success
  when: result.rc == 0
  tags:
    - kubeadm-init

- name: 保存kubeadm context配置文件
  copy:
    remote_src: true
    src: /etc/kubernetes/admin.conf
    dest: /home/kubernetes/.kube/config
    owner: kubernetes
  run_once: yes
  delegate_to: "{{master1}}"
  when: success.rc == 0
  tags:
    - kubeadm-init

- name: 创建网络资源
  shell: |
    {% if network| lower == 'flannel' %}
    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
    {% elif network| lower == 'canal' %}
    kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/canal/rbac.yaml
    kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/canal/rbac.yaml
    {% elif network | lower == 'calico' %}
    kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml
    kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
    {% elif network | lower == 'weave' %}
    kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
    {% endif %}
  when: network is defined and success.rc == 0
  become: yes
  become_method: sudo
  become_user: kubernetes
  run_once: yes
  delegate_to: "{{master1}}"
  tags:
    - kubeadm-init

- name: 生成加入集群的命令(kubeadm join)
  shell: "kubeadm token create --print-join-command 2>/dev/null"
  register: join
  run_once: yes
  delegate_to: "{{master1}}"
  when: result.rc == 0
  tags:
    - kubeadm-init

- name: 输出kubeadm join命令
  debug: msg="{{ join.stdout }}"
  run_once: yes
  delegate_to: "{{master1}}"
  when: join.stdout != ""
  tags:
    - kubeadm-init
